name: Noticeboard Dev Deployment

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [development]
  pull_request:
    branches: [development]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
   test:

      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install dependencies
        run: |
          cd ./backend/notice_project
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Run unittest
        run: |
          cd ./backend/notice_project
          python manage.py test

   build:
    name: build
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use cached node_modules
        uses: c-hive/gha-yarn-cache@v2
        with:
         directory: test_root_config
         
         #this job installs intalls yarn dependencies on the github runner
         #and also to build the static files that would be transferred to server later
      - name: install Dependencies
        run: |
          yarn install          
          cd test_root_config
          yarn install
          yarn build
          
      - name: Use cached node_modules for root dir
        uses: c-hive/gha-yarn-cache@v2
        with:
         directory: frontend
     
      - name: install Dependencies
        run: |
          yarn install
          cd frontend
          yarn
          yarn build

   deploy:
       name: deploy
       needs: build
       runs-on: ubuntu-latest
       
       steps:
       - uses: actions/checkout@v2
       - name: Pull Repo on Server
         uses: appleboy/ssh-action@master
         with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.PASSWORD }}
            script: |
              cd /var/www/zc_plugin_noticeboard/backend/notice_project
              source venv/bin/activate
              git stash
              git clean -f
              git pull origin development
              git branch -r
              cd /var/www/zc_plugin_noticeboard/backend/notice_project
              pip3 install -r requirements.txt
              python3 manage.py migrate
              yarn

       - name: Use cached node_modules
         uses: c-hive/gha-yarn-cache@v2
         with:
            directory: test_root_config

       - name: install Dependencies
         run: | 
          yarn install
          cd test_root_config
          yarn install
          yarn build
          
       - name: Use cached node_modules for root dir
         uses: c-hive/gha-yarn-cache@v2
         with:
            directory: frontend
     
       - name: install Dependencies
         run: |
          yarn install
          cd frontend/
          yarn
          yarn build

       - name: copy build to server
         uses: Creepios/sftp-action@v1.0.1
         with:
            host: ${{ secrets.HOST }}
            username: ${{ secrets.USERNAME }}
            password: ${{ secrets.PASSWORD }}
            localPath: './test_root_config/dist'
            remotePath: '/var/www/zc_plugin_noticeboard/test_root_config/dist'

       - name: copy build to server
         uses: Creepios/sftp-action@v1.0.1
         with:
              host: ${{ secrets.HOST }}
              username: ${{ secrets.USERNAME }}
              password: ${{ secrets.PASSWORD }}
              localPath: './frontend/dist'
              remotePath: '/var/www/zc_plugin_noticeboard/frontend/dist'

       - name: collect static and restart gunicorn
         uses: appleboy/ssh-action@master
         with:
              host: ${{ secrets.HOST }}
              username: ${{ secrets.USERNAME }}
              password: ${{ secrets.PASSWORD }}
              script: |
                cd /var/www/zc_plugin_noticeboard/backend/notice_project
                python3 manage.py collectstatic --noinput
                cd /var/www/zc_plugin_noticeboard/backend/notice_project
                source venv/bin/activate
                pkill -u ${{secrets.USERNAME}} gunicorn
                gunicorn --bind 0.0.0.0:8800 noticeboard.wsgi --daemon
